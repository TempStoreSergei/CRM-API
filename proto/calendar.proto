syntax = "proto3";

package calendar;

import "google/protobuf/timestamp.proto";

// Методы Сервиса
service CalendarService {
  rpc Create(EventCreate) returns (ResponseOK) {};
  rpc Update(EventUpdate) returns (ResponseOK) {};
  rpc Delete(EventDelete) returns (ResponseOK) {};
  rpc GetAll(Empty) returns (ResponseEvents) {};
  rpc GetDayEvent(EventUser) returns (ResponseEvents) {};
  rpc GetWeekEvent(EventUser) returns (ResponseEvents) {};
  rpc GetMonthEvent(EventUser) returns (ResponseEvents) {};
  rpc GetCategories(Empty) returns (ResponseCategories) {};
  rpc GetPriorities(Empty) returns (ResponsePriorities) {};
}

message Empty {}


// Создание события в календаре
message EventCreate {
  string userId = 1; // ID пользователя
  string name = 2; // Название события
  string description = 3; // Описание события
  google.protobuf.Timestamp startTime = 4; // Время начала
  uint32 duration = 5; // // Сколько по времени идет событие
  string categoryId = 6; // ID категории
  string priorityId = 7; // ID приоритета
}

// Обновление события в календаре
message EventUpdate {
  string id = 1; // ID события
  string userId = 2; // ID пользователя
  string name = 3; // Название события
  string description = 4; // Описание события
  google.protobuf.Timestamp startTime = 5; // Время начала
  uint32 duration = 6; // // Сколько по времени идет событие
  string categoryId = 7; // ID категории
  string priorityId = 8; // ID приоритета
}

// Ответ с одним событием
message EventResponse {
  string id = 1; // ID события
  string userId = 2; // ID пользователя
  string name = 3; // Название события
  string description = 4; // Описание события
  string startTime = 5; // Время начала
  string endTime = 6; // Время окончания
  string categoryId = 7; // ID категории
  string priorityId = 8; // ID приоритета
}

// Id события - для удаления
message EventDelete {
  string id = 1;
}

// Пользователь
message EventUser {
  string userId = 1;
  google.protobuf.Timestamp currentTime = 2;
}


// Успешный ответ - список категорий
message ResponseCategories {
  repeated Category categories = 1;
}

// Успешный ответ - список приоритетов
message ResponsePriorities {
  repeated Priority priorities = 1;
}

// Категория
message Category {
  string id = 1;
  string name = 2;
}

// Приоритет
message Priority {
  string id = 1;
  string name = 2;
}

// Успешный ответ - список Cобытий
message ResponseEvents {
  repeated EventResponse result = 1;
}

// Успешный ответ от сервиса
message ResponseOK {
  string result = 1;
}
